openapi: 3.0.3
info:
  title: FilmHub API
  description: REST API for FilmHub platform
  version: 1.0.0
servers:
  - url: http://localhost:8080
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: object
      required: [username, email, password]
      properties:
        username:
          type: string
          example: john_doe
        email:
          type: string
          format: email
          example: john@example.com
        password:
          type: string
          format: password
          example: password123
    LoginRequest:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
          example: john@example.com
        password:
          type: string
          format: password
          example: password123
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
    FilmRequest:
      type: object
      required: [title, description, release_date]
      properties:
        title:
          type: string
          example: The Matrix
        description:
          type: string
          example: Sci-fi action movie about virtual reality
        release_date:
          type: string
          format: date-time
          example: 1999-03-31T00:00:00Z
    Film:
      allOf:
        - $ref: '#/components/schemas/FilmRequest'
        - type: object
          properties:
            id:
              type: integer
              example: 1
            rating:
              type: number
              format: float
              example: 8.7
            created_at:
              type: string
              format: date-time
              example: 2023-01-01T00:00:00Z
paths:
  /register:
    post:
      tags: [auth]
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered
          content:
            application/json:
              schema:
                type: object
                example: {"status": "created"}
        '400':
          description: Validation error
        '500':
          description: Internal server error
  /login:
    post:
      tags: [auth]
      summary: User login, returns JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Validation error
        '401':
          description: Invalid credentials
  /films:
    get:
      tags: [films]
      summary: Search films
      parameters:
        - in: query
          name: query
          schema:
            type: string
          description: Search query
      responses:
        '200':
          description: List of films
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        '500':
          description: Internal server error
    post:
      tags: [films]
      summary: Create a film (requires auth)
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilmRequest'
      responses:
        '201':
          description: Film created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
        '400':
          description: Validation error
        '401':
          description: Unauthorized
        '500':
          description: Internal server error
  /films/{id}:
    get:
      tags: [films]
      summary: Get film by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Film ID
      responses:
        '200':
          description: Film data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        '400':
          description: Invalid ID
        '404':
          description: Film not found
        '500':
          description: Internal server error 